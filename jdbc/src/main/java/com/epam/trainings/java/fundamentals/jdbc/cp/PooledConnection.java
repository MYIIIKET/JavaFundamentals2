package com.epam.trainings.java.fundamentals.jdbc.cp;import java.sql.Connection;import java.sql.SQLException;import java.util.function.Predicate;@SuppressWarnings("WeakerAccess")public interface PooledConnection extends ConnectionWrapper {    static PooledConnection create(Connection connection,                                   Predicate<PooledConnection> freeMethod) throws SQLException {        connection.setAutoCommit(true);        return new PooledConnection() {            @Override            public Connection toSrc() {                return connection;            }            @Override            public void close() throws SQLException {                Connection connection = toSrc();                if (connection.isClosed()) throw new SQLException("Attempting to close closed connection.");                if (connection.isReadOnly()) connection.setReadOnly(false);                if (!freeMethod.test(this)) throw new SQLException("Error allocating connection in the pool.");            }        };    }}